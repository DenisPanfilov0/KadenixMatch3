//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherColoredTileAnimation;

    public static Entitas.IMatcher<GameEntity> ColoredTileAnimation {
        get {
            if (_matcherColoredTileAnimation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ColoredTileAnimation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherColoredTileAnimation = matcher;
            }

            return _matcherColoredTileAnimation;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Tiles.ColoredTileAnimationComponent coloredTileAnimation { get { return (Code.Gameplay.Features.Tiles.ColoredTileAnimationComponent)GetComponent(GameComponentsLookup.ColoredTileAnimation); } }
    public Code.Gameplay.Features.Tiles.Behaviours.ColoredTileAnimation ColoredTileAnimation { get { return coloredTileAnimation.Value; } }
    public bool hasColoredTileAnimation { get { return HasComponent(GameComponentsLookup.ColoredTileAnimation); } }

    public GameEntity AddColoredTileAnimation(Code.Gameplay.Features.Tiles.Behaviours.ColoredTileAnimation newValue) {
        var index = GameComponentsLookup.ColoredTileAnimation;
        var component = (Code.Gameplay.Features.Tiles.ColoredTileAnimationComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Tiles.ColoredTileAnimationComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceColoredTileAnimation(Code.Gameplay.Features.Tiles.Behaviours.ColoredTileAnimation newValue) {
        var index = GameComponentsLookup.ColoredTileAnimation;
        var component = (Code.Gameplay.Features.Tiles.ColoredTileAnimationComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Tiles.ColoredTileAnimationComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveColoredTileAnimation() {
        RemoveComponent(GameComponentsLookup.ColoredTileAnimation);
        return this;
    }
}
